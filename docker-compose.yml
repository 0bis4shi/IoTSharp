version: '3.4'
services:
  pgsql:
    image: postgres
    container_name: pgsql
    restart: always
    volumes:
      -  /var/iotsharp/postgresql:/var/lib/postgresql/data 
    environment:
      TZ: "Asia/Shanghai"
      POSTGRES_USER: postgres
      POSTGRES_DB: IoTSharp
      POSTGRES_PASSWORD: future 
    ports: 
     - "5432:5432"
    networks:
      - iotsharp-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    volumes:
       - "/etc/iotsharp/servers.json:/pgadmin4/servers.json"
    depends_on:
      - pgsql 
    links:
      - pgsql
    ports:
      - 8090:80
    environment:
      TZ: "Asia/Shanghai"
      PGADMIN_DEFAULT_EMAIL: "root@iotsharp.io"
      PGADMIN_DEFAULT_PASSWORD: "1-q2-w3-e4-r5-t"
    networks:
      - iotsharp-network

  iotsharp:
    image: iotsharp/iotsharp:latest
    container_name: iotsharp
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - pgsql
    links:
      - pgsql
      - kafka1
      - zoo1
    ports:
      - 2927:80
      - 1883:1883
      - 8883:8883 
      - 5683:5683
      - 5684:5684
      - 502:502
    networks:
      - iotsharp-network
 

  taos:
    image: tdengine/tdengine:2.0.1.1
    restart: always
    container_name: taos
    ports:
      - 6030:6030
      - 6035:6035
      - 6041:6041
      - 6030-6040:6030-6040/udp
    volumes:
      - /etc/taos:/etc/taos
  zoo1:
    image: zookeeper:3.4.9
    container_name: zoo1
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo1/data:/data
      - ./zk-single-kafka-single/zoo1/datalog:/datalog
    networks:
      - iotsharp-network
  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:9092 
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      - iotsharp-network

networks: 
  iotsharp-network:
      driver:  bridge